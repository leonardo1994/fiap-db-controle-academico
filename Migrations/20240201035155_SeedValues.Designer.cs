// <auto-generated />
using System;
using ControleAcademico.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleAcademico.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240201035155_SeedValues")]
    partial class SeedValues
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControleAcademico.Entities.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3f27cb7-85b1-44e0-b0e6-352aed88b934"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9684),
                            Nome = "Felipe",
                            RM = "RM347765",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("94ec29f4-1354-4b70-95ac-7591827e7042"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9698),
                            Nome = "Vinicius",
                            RM = "RM347982",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3bb1284a-3f5a-4b23-aea8-e30989d900da"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9699),
                            Nome = "Lucas",
                            RM = "RM348290",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0bb2ebe3-072c-4c4c-99ee-3ceea556d09d"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9700),
                            Nome = "Leonardo",
                            RM = "RM347972",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ControleAcademico.Entities.Aula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date");

                    b.Property<Guid>("DisciplinaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Aulas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f090a5e9-dd0b-4d81-94f9-e8186f7fc4f4"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9740),
                            Data = new DateOnly(2024, 2, 1),
                            DisciplinaId = new Guid("4fd8a2af-7a30-4d99-82d8-15a3f771f642"),
                            Status = 0,
                            TurmaId = new Guid("b283b178-8492-4cd6-9b88-bf0b000c6125"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9067cc83-0acb-4da3-b799-56693ddf5aac"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9768),
                            Data = new DateOnly(2024, 2, 8),
                            DisciplinaId = new Guid("4fd8a2af-7a30-4d99-82d8-15a3f771f642"),
                            Status = 0,
                            TurmaId = new Guid("b283b178-8492-4cd6-9b88-bf0b000c6125"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d68dbef7-686c-4309-b2eb-d05ce0f36a04"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9778),
                            Data = new DateOnly(2024, 2, 15),
                            DisciplinaId = new Guid("4fd8a2af-7a30-4d99-82d8-15a3f771f642"),
                            Status = 0,
                            TurmaId = new Guid("b283b178-8492-4cd6-9b88-bf0b000c6125"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ControleAcademico.Entities.Chamada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AulaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PeriodoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TipoPresenca")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("AulaId");

                    b.HasIndex("PeriodoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Chamadas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d52da1d3-4871-4a02-ac7e-168436980df4"),
                            AlunoId = new Guid("b3f27cb7-85b1-44e0-b0e6-352aed88b934"),
                            AulaId = new Guid("f090a5e9-dd0b-4d81-94f9-e8186f7fc4f4"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9760),
                            PeriodoId = new Guid("c95a4c51-803e-4c29-9fab-cba15ec55791"),
                            ProfessorId = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            Status = 0,
                            TipoPresenca = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("36907b91-9fd4-480a-a117-7832d42fd4aa"),
                            AlunoId = new Guid("94ec29f4-1354-4b70-95ac-7591827e7042"),
                            AulaId = new Guid("f090a5e9-dd0b-4d81-94f9-e8186f7fc4f4"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9763),
                            PeriodoId = new Guid("c95a4c51-803e-4c29-9fab-cba15ec55791"),
                            ProfessorId = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            Status = 0,
                            TipoPresenca = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e631486d-84d4-4296-8087-c59d72302c6b"),
                            AlunoId = new Guid("3bb1284a-3f5a-4b23-aea8-e30989d900da"),
                            AulaId = new Guid("f090a5e9-dd0b-4d81-94f9-e8186f7fc4f4"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9766),
                            PeriodoId = new Guid("c95a4c51-803e-4c29-9fab-cba15ec55791"),
                            ProfessorId = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            Status = 0,
                            TipoPresenca = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8cd02a8c-9f38-47dd-8c32-226fccc419f2"),
                            AlunoId = new Guid("0bb2ebe3-072c-4c4c-99ee-3ceea556d09d"),
                            AulaId = new Guid("f090a5e9-dd0b-4d81-94f9-e8186f7fc4f4"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9767),
                            PeriodoId = new Guid("c95a4c51-803e-4c29-9fab-cba15ec55791"),
                            ProfessorId = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            Status = 0,
                            TipoPresenca = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4cc39b00-c7a6-42a0-9763-045b47d29895"),
                            AlunoId = new Guid("b3f27cb7-85b1-44e0-b0e6-352aed88b934"),
                            AulaId = new Guid("9067cc83-0acb-4da3-b799-56693ddf5aac"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9772),
                            PeriodoId = new Guid("98b04988-ce51-46eb-8ed1-c810d006d977"),
                            ProfessorId = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            Status = 0,
                            TipoPresenca = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b803c7ed-9b9a-4d41-ab72-9cfeff03fd47"),
                            AlunoId = new Guid("94ec29f4-1354-4b70-95ac-7591827e7042"),
                            AulaId = new Guid("9067cc83-0acb-4da3-b799-56693ddf5aac"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9773),
                            PeriodoId = new Guid("98b04988-ce51-46eb-8ed1-c810d006d977"),
                            ProfessorId = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            Status = 0,
                            TipoPresenca = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e43fcb4e-fc57-4c72-a54d-5c041989df1e"),
                            AlunoId = new Guid("3bb1284a-3f5a-4b23-aea8-e30989d900da"),
                            AulaId = new Guid("9067cc83-0acb-4da3-b799-56693ddf5aac"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9776),
                            PeriodoId = new Guid("98b04988-ce51-46eb-8ed1-c810d006d977"),
                            ProfessorId = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            Status = 0,
                            TipoPresenca = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("43c4a6f7-8238-4d61-b010-b0b5cc14cdf2"),
                            AlunoId = new Guid("0bb2ebe3-072c-4c4c-99ee-3ceea556d09d"),
                            AulaId = new Guid("9067cc83-0acb-4da3-b799-56693ddf5aac"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9777),
                            PeriodoId = new Guid("98b04988-ce51-46eb-8ed1-c810d006d977"),
                            ProfessorId = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            Status = 0,
                            TipoPresenca = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e3c040c7-bc72-44fc-8917-993bd4af3ef6"),
                            AlunoId = new Guid("b3f27cb7-85b1-44e0-b0e6-352aed88b934"),
                            AulaId = new Guid("d68dbef7-686c-4309-b2eb-d05ce0f36a04"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9782),
                            PeriodoId = new Guid("53635734-66bb-4716-a32c-9534047150cc"),
                            ProfessorId = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            Status = 0,
                            TipoPresenca = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("529bdb30-0973-4363-a7e1-287580c0f603"),
                            AlunoId = new Guid("94ec29f4-1354-4b70-95ac-7591827e7042"),
                            AulaId = new Guid("d68dbef7-686c-4309-b2eb-d05ce0f36a04"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9784),
                            PeriodoId = new Guid("53635734-66bb-4716-a32c-9534047150cc"),
                            ProfessorId = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            Status = 0,
                            TipoPresenca = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cf1aeabc-bf07-421c-a03d-bce58ef12c24"),
                            AlunoId = new Guid("3bb1284a-3f5a-4b23-aea8-e30989d900da"),
                            AulaId = new Guid("d68dbef7-686c-4309-b2eb-d05ce0f36a04"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9786),
                            PeriodoId = new Guid("53635734-66bb-4716-a32c-9534047150cc"),
                            ProfessorId = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            Status = 0,
                            TipoPresenca = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("13b04fcc-9513-421a-ba08-9eaf0d8b25d4"),
                            AlunoId = new Guid("0bb2ebe3-072c-4c4c-99ee-3ceea556d09d"),
                            AulaId = new Guid("d68dbef7-686c-4309-b2eb-d05ce0f36a04"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9787),
                            PeriodoId = new Guid("53635734-66bb-4716-a32c-9534047150cc"),
                            ProfessorId = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            Status = 0,
                            TipoPresenca = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ControleAcademico.Entities.ConteudoAula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AulaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConteudoProgramaticoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("InformacoesComplementares")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AulaId");

                    b.HasIndex("ConteudoProgramaticoId");

                    b.ToTable("ConteudoAulas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ab0752c9-76a4-4e18-856c-544d4684682a"),
                            AulaId = new Guid("f090a5e9-dd0b-4d81-94f9-e8186f7fc4f4"),
                            ConteudoProgramaticoId = new Guid("37eb7b3b-c267-4ce5-81d1-26696ec7bbb0"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9750),
                            InformacoesComplementares = "",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d7079733-319b-41a9-a9d1-7ba3332788e2"),
                            AulaId = new Guid("9067cc83-0acb-4da3-b799-56693ddf5aac"),
                            ConteudoProgramaticoId = new Guid("5bebda5c-46f9-4e34-849b-dd433924b496"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9769),
                            InformacoesComplementares = "",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("75c8abab-68e7-49bb-835d-bb577aa81de3"),
                            AulaId = new Guid("d68dbef7-686c-4309-b2eb-d05ce0f36a04"),
                            ConteudoProgramaticoId = new Guid("5791e766-86cf-4050-ad8d-6857770cf844"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9779),
                            InformacoesComplementares = "",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ControleAcademico.Entities.ConteudoProgramatico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DisciplinaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("ConteudoProgramaticos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37eb7b3b-c267-4ce5-81d1-26696ec7bbb0"),
                            Codigo = 1,
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9734),
                            Descricao = "Conceitos iniciais de banco de dados",
                            DisciplinaId = new Guid("4fd8a2af-7a30-4d99-82d8-15a3f771f642"),
                            Nome = "Introdução a banco de dados",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5bebda5c-46f9-4e34-849b-dd433924b496"),
                            Codigo = 2,
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9737),
                            Descricao = "Modelagem de dados com MER",
                            DisciplinaId = new Guid("4fd8a2af-7a30-4d99-82d8-15a3f771f642"),
                            Nome = "Modelagem de dados",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5791e766-86cf-4050-ad8d-6857770cf844"),
                            Codigo = 3,
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9738),
                            Descricao = "Linguagem SQL",
                            DisciplinaId = new Guid("4fd8a2af-7a30-4d99-82d8-15a3f771f642"),
                            Nome = "SQL",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ControleAcademico.Entities.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65a96013-2da3-4db1-8653-965660d1d49e"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9713),
                            Nome = "ARQUITETURA E DESENVOLVIMENTO .NET",
                            Sigla = "ARCHNET",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ControleAcademico.Entities.Disciplina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Disciplinas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4fd8a2af-7a30-4d99-82d8-15a3f771f642"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9730),
                            CursoId = new Guid("65a96013-2da3-4db1-8653-965660d1d49e"),
                            Nome = "Arquitetura de Banco de Dados e Persistência",
                            ProfessorId = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ControleAcademico.Entities.Periodo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AulaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("HoraFim")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AulaId");

                    b.ToTable("Periodos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c95a4c51-803e-4c29-9fab-cba15ec55791"),
                            AulaId = new Guid("f090a5e9-dd0b-4d81-94f9-e8186f7fc4f4"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9753),
                            HoraFim = new TimeOnly(21, 0, 0),
                            HoraInicio = new TimeOnly(19, 0, 0),
                            Numero = 1,
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("521f2e83-3ba0-48a4-8cca-2532d8a94788"),
                            AulaId = new Guid("f090a5e9-dd0b-4d81-94f9-e8186f7fc4f4"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9759),
                            HoraFim = new TimeOnly(22, 45, 0),
                            HoraInicio = new TimeOnly(21, 20, 0),
                            Numero = 2,
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("98b04988-ce51-46eb-8ed1-c810d006d977"),
                            AulaId = new Guid("9067cc83-0acb-4da3-b799-56693ddf5aac"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9770),
                            HoraFim = new TimeOnly(21, 0, 0),
                            HoraInicio = new TimeOnly(19, 0, 0),
                            Numero = 1,
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1eb477bb-fbd0-4748-a50b-4feb2ec22c9f"),
                            AulaId = new Guid("9067cc83-0acb-4da3-b799-56693ddf5aac"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9771),
                            HoraFim = new TimeOnly(22, 45, 0),
                            HoraInicio = new TimeOnly(21, 20, 0),
                            Numero = 2,
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("53635734-66bb-4716-a32c-9534047150cc"),
                            AulaId = new Guid("d68dbef7-686c-4309-b2eb-d05ce0f36a04"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9780),
                            HoraFim = new TimeOnly(21, 0, 0),
                            HoraInicio = new TimeOnly(19, 0, 0),
                            Numero = 1,
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("777ecda3-2feb-4fc0-bfb9-94b1abb57468"),
                            AulaId = new Guid("d68dbef7-686c-4309-b2eb-d05ce0f36a04"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9781),
                            HoraFim = new TimeOnly(22, 45, 0),
                            HoraInicio = new TimeOnly(21, 20, 0),
                            Numero = 2,
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ControleAcademico.Entities.Professor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Professores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f8d01e2f-7030-4ea7-9eee-9f83042041c0"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9702),
                            Nome = "Ricardo",
                            RM = "PF1931",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ControleAcademico.Entities.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Turmas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b283b178-8492-4cd6-9b88-bf0b000c6125"),
                            Code = "2NETR",
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9715),
                            CursoId = new Guid("65a96013-2da3-4db1-8653-965660d1d49e"),
                            Nome = "Turma 2NETR",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ControleAcademico.Entities.TurmaAluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("TurmaId");

                    b.ToTable("TurmaAlunos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b08363e-e98a-4306-a223-2295ddb70cbf"),
                            AlunoId = new Guid("b3f27cb7-85b1-44e0-b0e6-352aed88b934"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9726),
                            TurmaId = new Guid("b283b178-8492-4cd6-9b88-bf0b000c6125"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("64f17d88-bc41-499c-a3d3-485d8011cea1"),
                            AlunoId = new Guid("94ec29f4-1354-4b70-95ac-7591827e7042"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9727),
                            TurmaId = new Guid("b283b178-8492-4cd6-9b88-bf0b000c6125"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9aa2881e-966f-4f8e-b792-b6bd5d7c2811"),
                            AlunoId = new Guid("3bb1284a-3f5a-4b23-aea8-e30989d900da"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9727),
                            TurmaId = new Guid("b283b178-8492-4cd6-9b88-bf0b000c6125"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1d276cde-39c7-4763-b47d-ac31a3c11510"),
                            AlunoId = new Guid("0bb2ebe3-072c-4c4c-99ee-3ceea556d09d"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 51, 55, 519, DateTimeKind.Local).AddTicks(9728),
                            TurmaId = new Guid("b283b178-8492-4cd6-9b88-bf0b000c6125"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ControleAcademico.Entities.Aula", b =>
                {
                    b.HasOne("ControleAcademico.Entities.Disciplina", "Disciplina")
                        .WithMany("Aulas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleAcademico.Entities.Turma", "Turma")
                        .WithMany("Aulas")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("ControleAcademico.Entities.Chamada", b =>
                {
                    b.HasOne("ControleAcademico.Entities.Aluno", "Aluno")
                        .WithMany("Chamadas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleAcademico.Entities.Aula", "Aula")
                        .WithMany("Chamadas")
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleAcademico.Entities.Periodo", "Periodo")
                        .WithMany("Chamadas")
                        .HasForeignKey("PeriodoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControleAcademico.Entities.Professor", "Professor")
                        .WithMany("Chamadas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Aula");

                    b.Navigation("Periodo");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("ControleAcademico.Entities.ConteudoAula", b =>
                {
                    b.HasOne("ControleAcademico.Entities.Aula", "Aula")
                        .WithMany("Conteudos")
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleAcademico.Entities.ConteudoProgramatico", "ConteudoProgramatico")
                        .WithMany("Aulas")
                        .HasForeignKey("ConteudoProgramaticoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aula");

                    b.Navigation("ConteudoProgramatico");
                });

            modelBuilder.Entity("ControleAcademico.Entities.ConteudoProgramatico", b =>
                {
                    b.HasOne("ControleAcademico.Entities.Disciplina", "Disciplina")
                        .WithMany("ConteudosProgramaticos")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("ControleAcademico.Entities.Disciplina", b =>
                {
                    b.HasOne("ControleAcademico.Entities.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleAcademico.Entities.Professor", "Professor")
                        .WithMany("Disciplinas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("ControleAcademico.Entities.Periodo", b =>
                {
                    b.HasOne("ControleAcademico.Entities.Aula", "Aula")
                        .WithMany()
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");
                });

            modelBuilder.Entity("ControleAcademico.Entities.Turma", b =>
                {
                    b.HasOne("ControleAcademico.Entities.Curso", "Curso")
                        .WithMany("Turmas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("ControleAcademico.Entities.TurmaAluno", b =>
                {
                    b.HasOne("ControleAcademico.Entities.Aluno", "Aluno")
                        .WithMany("Turmas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleAcademico.Entities.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("ControleAcademico.Entities.Aluno", b =>
                {
                    b.Navigation("Chamadas");

                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("ControleAcademico.Entities.Aula", b =>
                {
                    b.Navigation("Chamadas");

                    b.Navigation("Conteudos");
                });

            modelBuilder.Entity("ControleAcademico.Entities.ConteudoProgramatico", b =>
                {
                    b.Navigation("Aulas");
                });

            modelBuilder.Entity("ControleAcademico.Entities.Curso", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("ControleAcademico.Entities.Disciplina", b =>
                {
                    b.Navigation("Aulas");

                    b.Navigation("ConteudosProgramaticos");
                });

            modelBuilder.Entity("ControleAcademico.Entities.Periodo", b =>
                {
                    b.Navigation("Chamadas");
                });

            modelBuilder.Entity("ControleAcademico.Entities.Professor", b =>
                {
                    b.Navigation("Chamadas");

                    b.Navigation("Disciplinas");
                });

            modelBuilder.Entity("ControleAcademico.Entities.Turma", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Aulas");
                });
#pragma warning restore 612, 618
        }
    }
}
